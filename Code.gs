/**
 * This function handles simple onEdit events and detects if the checkbox on the ORDER FORM or BOOKING PROGRAM page is checked and then checks a hidden checkbox on the BOOKING PROGRAM.
 * An external spreadsheet is watching the hidden checkbox and when the value has changed to true, a script will run that locks this spreadsheet from the user and sends emails to the
 * appropriate recipients. This script also sets the values on the hidden ORDER CONFIRMATION and EXPORT sheets in order to attach those documents to the emails.
 * 
 * @param {Event Object} e : The event object generated by the simple on edit trigger.
 * @author Jarren Ralf
 */
function onEdit(e)
{
  const row = e.range.rowStart;
  const col = e.range.columnStart;

  if (row === e.range.rowEnd && col === e.range.columnEnd) // Single cell
  {
    const sheetName = SpreadsheetApp.getActiveSheet().getSheetName();

    if (((sheetName === 'BOOKING PROGRAM' && row === 30 && col === 1) || (sheetName === 'ORDER FORM' && row === 2 && col === 1)) && e.value === 'TRUE') // If either checkbox is checked
    {
      const spreadsheet = e.source;
      const ui = SpreadsheetApp.getUi();
      const sheet = spreadsheet.getSheetByName('BOOKING PROGRAM');
      const bookingValues = sheet.getSheetValues(4, 2, 9, 1); // Contains some values to check if the order is ready for submission

      if (bookingValues[8][0] == 0) // If the total is $0.00, then no items have been ordered, therefore prompt the user to order atleast 1 item
      {
        ui.alert('Please order at least 1 item before submitting your booking.')
        e.range.uncheck(); // Uncheck the checkbox that the user selected which triggered this script to run
      }
      else if (bookingValues[0][0] === "Please enter your PO Number here" || bookingValues[0][0] === '') // The customer has not edited the PO field or set it to blank
      {
        ui.alert('Please enter a PO Number before submitting your order.')
        e.range.uncheck(); // Uncheck the checkbox that the user selected which triggered this script to run
        sheet.getRange(4, 2).activate() // Take the user to the PO Number field
      }
      else // Order is ready for submission
      {
        const response = ui.alert('Is your order complete and ready for submission to Pacific Net & Twine?', ui.ButtonSet.YES_NO) // Double check if the user is ready to submit their order

        if (response !== ui.Button.YES) // The user has selected CLOSE or NO
          e.range.uncheck(); // Uncheck the checkbox that the user selected which triggered this script to run
        else
        {
          const orderForm = spreadsheet.getSheetByName('ORDER FORM') // Will collect data from the order form in order to create the export csv and order confirmation pdf
          var orderComfirmData = [], isOrdered;

          const exportData = orderForm.getSheetValues(6, 1, orderForm.getLastRow() - 5, 10).filter(item => {
            isOrdered = item[8] !== ''; // Quantity is not blank, therefore this item has been ordered
            
            if (isOrdered)
            {
              orderComfirmData.push([...item])  // Take all values for the order confirmation
              item.unshift('D')                 // The letter 'D' stands for detail line which is required for input into Adagio
              item.pop()                        // Remove the last element in the row because the extended cost is not required in the csv file
              item.splice(2, 6)                 // Remove all non-required elements
              item[2] = Math.round((item[2] + Number.EPSILON) * 100) / 100 // Round to two decimals
            }
            return isOrdered
          });

          spreadsheet.getSheetByName('ORDER CONFIRMATION').getRange(4, 1, orderComfirmData.length, orderComfirmData[0].length).setValues(orderComfirmData)
          spreadsheet.getSheetByName('Export').getRange(2, 1, exportData.length, exportData[0].length).setValues(exportData)
          Utilities.sleep(5000)
          sheet.getRange('D30').check() // This checkbox will trigger the unbound script to lock the sheet and send the appropriate emails
        }
      }
    }
  }
}